version: 2.1

orbs:
  singularity: singularity/singularity@1.0.8

workflows:
  main:
    jobs:
      - build_docker:
          context: org-global
      - build_singularity:
          name: "Singularity 3.2.1 - Python 3"
          context: org-global
          #singularity: 3.2.1
          singularity: 3.5.0
          singularity-3: true
          #singularity: 2.5.2
          #singularity-3: false
          requires:
            - build_docker

jobs:
  build_docker:
    docker:
      - image: circleci/golang:1.13.4
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          no_output_timeout: 30m
          command: |
            docker build -t dylanturpin/unsupervisedlandmarklearning:${CIRCLE_SHA1} ./docker
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u dylanturpin -p $DOCKER_PASS
            docker push dylanturpin/unsupervisedlandmarklearning:${CIRCLE_SHA1}
  build_singularity:
    parameters:
        singularity:
          type: string
          description: "Singularity version"
        singularity-3:
          type: boolean
          description: "Set to true for singularity 3, false for singularity 2"
          default: true
    machine: true
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies

      - run:
          name: install dependencies
          command: |
            ls $HOME
            if [ ! -d "/home/circleci/conda" ]; then
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
                /bin/bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/conda
                export PATH=$HOME/conda/bin:$PATH
                conda install -y -c defaults -c conda-forge sregistry
            else
                echo "Miniconda is already installed, continuing to build."
            fi
            chmod u+x ~/repo/.circleci/*.sh
      - run:
          name: update apt
          command: |
            sudo apt-get update
      # Install Singularity
      - when:
          condition: << parameters.singularity-3 >>
          steps:
            - singularity/install-go:
                go-version: '1.13'
            - singularity/debian-install-3:
                      singularity-version: << parameters.singularity >>
      - unless:
          condition: << parameters.singularity-3 >>
          steps:
            - singularity/debian-install-2:
                      singularity-version: << parameters.singularity >>

      - save_cache:
          paths:
            - /home/circleci/conda
          key: v2-dependencies

      - run:
          name: build container
          command: |
            cd ~/repo
            sed 's/CIRCLE_SHA1/'${CIRCLE_SHA1}'/g' ~/repo/Singularity > ~/repo/Singularity.tmp
            mv ~/repo/Singularity.tmp ~/repo/Singularity
            cat ~/repo/Singularity
            export PATH=$PATH:/opt/circleci/.pyenv/shims
            /bin/bash ~/repo/.circleci/build.sh Singularity
            mkdir -p build && cp *.tar build
          no_output_timeout: 30m
      - add_ssh_keys:
          fingerprints:
            - "e4:66:d0:f0:13:30:5f:ba:7c:51:cb:c4:44:ba:de:61"
      - run:
          name: deploy container to compute
          command: |
            echo "$SSH_USER@$SSH_HOST:$SSH_DEPLOY_PATH"
            scp build/*.tar "$SSH_USER@$SSH_HOST:$SSH_DEPLOY_PATH"
          no_output_timeout: 120m

      # build the container!
      # You can add any other sregistry push commands here, and specify a client
      # (and make sure your define the encrypted environment credentials in circle ci
      # to push to your storage locations of choice

      # Examples with upload to storage clients defined by sregistry
      # https://singularityhub.github.io/sregistry-cli/clients
      # Environment variables must be defined in CI encrypted secrets/settings
      # https://circleci.com/docs/2.0/env-vars/
      #- /bin/bash build.sh --uri collection/container --cli google-storage Singularity
      #- /bin/bash build.sh --uri collection/container --cli google-drive Singularity
      #- /bin/bash build.sh --uri collection/container --cli globus Singularity
      #- /bin/bash build.sh --uri collection/container --cli registry Singularity

      - store_artifacts:
          path: ~/repo/build
          destination: singularity-containers
